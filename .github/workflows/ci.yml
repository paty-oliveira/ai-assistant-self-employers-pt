name: Continuous Integration (CI) pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test-backend:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.12", "3.13"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.4
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ./backend/.venv
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: ./backend/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: ./backend
        run: poetry install --no-interaction --no-ansi --no-root

      - name: Linting and static code analysis
        working-directory: ./backend
        run: |
          poetry run black .
          poetry run isort .

      - name: Run tests
        working-directory: ./backend
        run: poetry run pytest

  build-frontend:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.12", "3.13"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.4
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ./frontend/.venv
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: ./frontend/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: poetry install --no-interaction --no-ansi --no-root

      - name: Linting and static code analysis
        working-directory: ./frontend
        run: |
          poetry run black .
          poetry run isort .
